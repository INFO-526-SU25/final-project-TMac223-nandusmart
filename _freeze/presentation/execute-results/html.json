{
  "hash": "dda6bc561fe91820228d44d05242da2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Statistical Exploration of Himalayan Expeditions\"\nsubtitle: \"INFO 526 - Summer 2025 - Final Project\"\nauthor: \"Trevor Macdonald & Nandakumar Kuthalaraja\"\ntitle-slide-attributes:\n  data-background-image: images/HimalayanExpedition.png\n  data-background-size: stretch\n  data-background-opacity: \"0.7\"\n  data-slide-number: none\n  style: \"color: white;\"\nformat:\n  revealjs:\n    theme:  ['data/customtheming.scss']\n  \neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n\n## Our Dataset\n\nHimalayan Database - Created to continue the legacy of Elizabeth Hawley, a journalist who spent decades documenting Himalayan expeditions. \n\nDataset - [**TidyTuesday GitHub repository**](https://github.com/rfordatascience/tidytuesday/tree/main/data/2025/2025-01-21)Â and has been amended to the years 2020 - 2024 to manage file size.\n\n2 main datasets : \n- exped_tidy -  contains details of expeditions. \n- peaks_tidy -  includes data about the Himalayan Peaks.\n\n# Question 1\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-1-1.png){width=1800}\n:::\n:::\n\n\n\n\n# Question 2\n\n# Limitations:\n\n1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;\n\n2.  There should not be spaces after the opening `$` or before the closing `$`.\n\n# Wrap up\n\n",
    "supporting": [
      "presentation_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}